name: Build Android Kernel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: LineageOS/android_kernel_lge_sdm845
        ref: lineage-22.2
        path: kernel
        fetch-depth: 1

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential ccache curl flex g++-multilib \
          gcc-multilib git gnupg gperf imagemagick lib32readline-dev \
          lib32z1-dev liblz4-tool libncurses5-dev libssl-dev \
          libxml2 libxml2-utils lzop pngcrush rsync schedtool \
          squashfs-tools xsltproc zip zlib1g-dev unzip python3 \
          python-is-python3 openjdk-11-jdk
          
    - name: Download toolchains
      run: |
        mkdir -p $GITHUB_WORKSPACE/toolchain
        cd $GITHUB_WORKSPACE/toolchain
        # Clang
        git clone https://github.com/LineageOS/android_prebuilts_clang_kernel_linux-x86_clang-r416183b \
          -b lineage-20.0 clang --depth=1
        # GCC (aarch64 and arm32)
        git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 \
          -b lineage-19.1 gcc64 --depth=1
        git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 \
          -b lineage-19.1 gcc32 --depth=1


    - name: Clone SukiSU (optional)
      run: |
        cd kernel
        curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s nongki
        curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
        cd ..
        
    - name: Build kernel
      run: |
        cd kernel
        export ARCH=arm64
        export SUBARCH=arm64
        export CLANGDIR=$GITHUB_WORKSPACE/toolchain/clang
        export GCCDIR64=$GITHUB_WORKSPACE/toolchain/gcc64
        export GCCDIR32=$GITHUB_WORKSPACE/toolchain/gcc32
        export PATH=$CLANGDIR/bin:$GCCDIR64/bin:$GCCDIR32/bin:$PATH
        export CLANG_TRIPLE=aarch64-linux-android-
        export CROSS_COMPILE=aarch64-linux-android-
        export CROSS_COMPILE_ARM32=arm-linux-androideabi-

        make O=out judyln_lao_com-perf_defconfig

        # Add your custom configs here
        scripts/config --file out/.config --enable KPM
        scripts/config --file out/.config --enable KALLSYMS
        scripts/config --file out/.config --enable KALLSYMS_ALL

        # Disable EFI, still
        scripts/config --file out/.config --disable EFI --disable EFI_STUB || true

        # Regenerate configuration
        make O=out olddefconfig
        
        # Build
        make -j$(nproc) O=out ARCH=arm64 LLVM=1

    - name: Prepare release files
      run: |
        mkdir -p release
        cp kernel/out/arch/arm64/boot/Image* release/ || true
        ls -lh release

    - name: Upload kernel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ github.run_number }}
        path: release/*
